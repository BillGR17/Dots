#!/bin/bash
SCREENSHOT_TYPE="$1" 
# This script requires hyprctl,awk, xdotool, grim, slurp, imagemagick
# This should get the active windows name
if [ ! -z "${WAYLAND_DISPLAY}" ]; then
  ACTIVE_NAME=$(hyprctl activewindow|sed -n 's/^\s*title: //p'   )
else
  ACTIVE_NAME=$(xdotool getactivewindow getwindowname)
fi
# Timestamp is used as the screenshot's name
# Way better than numbering in my opinion
TIMESTAMP=$(date +"%s")
# In case of empty active_name
# Just to play it safe use UNTITLED
if [[ -z "$ACTIVE_NAME" ]];then
  ACTIVE_NAME="UNTITLED"
else
  # Make sure it doesnt create directories if the name contains \ or /
  ACTIVE_NAME=$(echo "${ACTIVE_NAME}"|tr '\\' '|'|tr '/' '|')
fi
SCREENSHOT_LOC="$(xdg-user-dir PICTURES)/${ACTIVE_NAME}/"
mkdir -p "${SCREENSHOT_LOC}"
case $SCREENSHOT_TYPE in
  "current")
    # Capture only the active window
    if [ ! -z "${WAYLAND_DISPLAY}" ]; then
      ACTIVE=$(hyprctl activewindow| awk '/^\s*at:/ {pos=$2} /^\s*size:/ {size=$2} END {gsub(",", "x", size); print pos " " size}')
      grim -t jpeg -q 100 -g "$(eval echo ${ACTIVE})"  "${SCREENSHOT_LOC}$TIMESTAMP.jpg" 
   else
      ACTIVE_ID=$(xprop -root _NET_ACTIVE_WINDOW|cut -d ' ' -f 5|tail)
      import -silent -window $ACTIVE_ID "${SCREENSHOT_LOC}$TIMESTAMP.jpg"
    fi
    ;;
  "root")
    # Capture all the window(s) on the screenshot
    if [ ! -z "${WAYLAND_DISPLAY}" ]; then
      grim -t jpeg "${SCREENSHOT_LOC}$TIMESTAMP.jpg"
    else
     import -silent -window root "${SCREENSHOT_LOC}$TIMESTAMP.jpg"
    fi
    ;;
  *)
    # THIS IS THE DEFAULT
    # Capture whatever the user selects
    if [ ! -z "${WAYLAND_DISPLAY}" ]; then
      grim -t jpeg -g "$(slurp)" "${SCREENSHOT_LOC}$TIMESTAMP.jpg"
    else
      import -silent "${SCREENSHOT_LOC}$TIMESTAMP.jpg"
    fi
    ;;
esac

